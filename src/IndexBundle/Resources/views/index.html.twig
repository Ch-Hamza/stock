{% extends 'base.html.twig' %}

{% block body %}
    {{ parent() }}

    <div class="container">
        <div class="search-container">
            <h2>Vente</h2>
            <form autocomplete="off" action="" class="search-form">
                <div class="autocomplete">
                    <input id="myInput" type="text" placeholder="Produit" class="form-control">
                </div>
            </form>

            <div>
                <form action="{{ path('save_sale_page') }}">
                    <table id="sales_table" class="table">
                        <tr>
                            <th>Code</th>
                            <th>Produit</th>
                            <th>Prix</th>
                            <th>Quantit√©</th>
                            <th>Total</th>
                        </tr>
                    </table>
                    <div class="row justify-content-center"><input type="submit" id="validation-btn" class="btn btn-primary validation-btn" value="Valider"></div>
                </form>
                <div>Total</div>
            </div>
        </div>

    </div>

{% endblock %}

{% block javascripts %}
    <script>
        function autocomplete(results) {
            inp = document.getElementById("myInput");
            var currentFocus;
            inp.addEventListener("input", function(e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) { return false;}
                currentFocus = -1;
                a = document.createElement('div');
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                this.parentNode.appendChild(a);
                for (i = 0; i < results.length; i++) {
                    if (results[i]['name'].substr(0, val.length).toUpperCase() === val.toUpperCase()) {
                        b = document.createElement('div');
                        b.innerHTML = "<strong>" + results[i]['name'].substr(0, val.length) + "</strong>";
                        b.innerHTML += results[i]['name'].substr(val.length);
                        b.innerHTML += "<input type='hidden' value='" + results[i]['name'] + "'>";
                        b.addEventListener("click", function(e) {
                            inp.value = this.getElementsByTagName("input")[0].value;
                            //add to table
                            $.each(results, function (key, value) {
                                if ( value['name'] === $('#myInput').val() ) {
                                    row = '<tr class="item_row">'
                                        + '<td>' + +'0'+results[key]['id'] + '</td>'
                                        + '<td>' + results[key]['name'] + '</td>'
                                        + '<td>' + results[key]['price'] + '</td>'
                                        + '<td><input type="number" min="1" value="1" class="quantity-input"></td>'
                                        + '<td>' + results[key]['quantity']*results[key]['price'] + ' DT</td>'
                                        + '</tr>';
                                    items.push({
                                        item: results[key],
                                        quantity: 1

                                    });
                                }
                            });
                            $('#sales_table').append(row);
                            inp.value = '';
                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });

            inp.addEventListener("keydown", function(e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode === 40) {
                    e.preventDefault();
                    currentFocus++;
                    addActive(x);
                } else if (e.keyCode === 38) { //up
                    e.preventDefault();
                    currentFocus--;
                    addActive(x);
                } else if (e.keyCode === 13) {
                    e.preventDefault();
                    if (currentFocus > -1) {
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                if (!x) return false;
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt !== x[i] && elmnt !== inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }
        
        $('#validation-btn').on('click', function () {
           //get quantity for each item and update them in the items array
            rows = $('.item_row');
            $.each(rows, function (key, value) {
                items[key]['quantity'] = $(this).find('.quantity-input').val();
            });
        });

        $(document).ready(function () {
            items = [];
            $.ajax({
                url: "search-all",
                type:"GET",
                async: false,
                success: function(msg){
                    results = msg['data'];
                },
                dataType: 'json'
            });
            autocomplete(results);
        });

    </script>
{% endblock %}